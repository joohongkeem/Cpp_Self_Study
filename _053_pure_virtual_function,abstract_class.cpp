/*

	- 만약 virtual 멤버 함수를 가진 클래스를 컴파일 할때, 각 멤버를 구현하지는 않았따면,
	  정의되지 않은 멤버 함수 호출한 것 치곤 매우 이해하기 어려운 오류 메시지를 보게 될 것이다.
	> 어떤 가상 멤버 함수가 컴파일 전에 구현되지 않았다면, 다음과 같은 오류 메시지를 보여주고 컴파일에 실패할 것이다.
			Undefined reference to Class_NAme virtual table;
	> 비록 파생 클래스가 없고 단지 하나의 가상 멤버 함수만 있어도, 그 함수가 정의되지 않았으면 여전히 에러 메시지가 발생한다.
	  이 오류메시지의 의미는, virtual로 선언된 함수의 정의가 없으면
	  생성자가 이미 정의도었다고 하더라도, 디폴트 생성자에 대한 정의되지 않은 참조에 관해 불평하는 오류 메시지가 저 생기는 것이다.
	> 이러한 경고는, 순수 가상 함수(pure virtual function) 에는 적용되지 않는다.
	  Why?) 순수 가상 함수는 정의를 갖지 않기 때문!!!



	* 추상 클래스와 순수 가상 함수

	- 사각형, 원형, 타원형 등 여러 종류의 도형에 대한 클래스를 가지는 그래픽 패키지 소프트웨어를 설계한다고 가정하자.
	  각 도형은 클래스 Rectangle나 클래스 Circle처럼 다른 클래스의 한 객체이다.
	  잘 설계된 프로그래밍 프로젝트에서 모든 도형의 클래스는, Figure라는 단일 부모 클래스의 자손일 것이다.

	  화면에 도형을 그리는 함수를 원한다고 가정하자.
	  원을 그리는 것과 사각형을 그리는 과정은 완전히 다르므로,
	  r이 Rectangle의 객체이고, c가 Circle의 객체라 하면 r.draw()와 c.draw()는 서로 다른 코드로 구현된 함수일 것이다.

	  부모 클래스 Figure는 center라는 함수를 가지는데, 이 함수는 원래의 도형을 지우고 도형을 화면의 중심으로 이동하여
	  화면의 중심에서 다시 그리는 기능을 한다.
	  함수 Figure::center는 화면의 중심에 도형을 다시 그리기 위해 함수 draw를 사용한다.
	  멤버 함수 draw를 가상 함수로 만들면, 클래스 Figure에 있는 멤버 함수 Figure:;center에 대한 코드를 작성할 수 있고,
	  파생 클래스 Circle을 사용할 때 클래스 Circle에 있는 draw 정의가 사용되는 정의가 될 것이다.

	  결코 Figure형의 객체를 생성하려고 하지 않는다.
	  단지, Circle과 Renctangle과 같은 파생 클래스의 객체를 생성할 뿐이다.
	  그래서 Figure::draw의 정의를 사용하지 않을 것이다.
	  그러나 이제까지 배운것에 기반하여, 비록 사소하지만 Figure::draw의 정의를 여전히 가지려고 할 것이다.

	  만일 멤버 함수 Figure::draw를 순수 가상 함수(pure virtual function)으로 만든다면, 그 멤버 함수를 정의할 필요가 없다.
	  멤버 함수를 순수 가상함수로 만드는 방법은 가상으로 만들고 다음과 같이 멤버 함수 선언에 '=0' 표기를 추가하는 것이다.
			virtual void draw() = 0;
	
	  어떤 종류의 멤버함수도 순수 가상함수로 만들 수 있다.
	  이 순수 가상 함수가 이 예와 같이 매개변수가 없는 void 함수일 필요는 없다.

	  하나 이상의 순수 가상 함수를 가지는 클래스를 '추상 클래스(abstract class)'라고 부른다.
	  추상 클래스는 다른 클래스를 파생하는 기반 클래스로만 사용될 수 있다.
	  완전한 클래스의 정의가 아니기 때문에 추상 클래스의 객체를 생성할 수 없다.
	  추상 클래스는 순수 가상함수가 아닌 다른 멤버 함수를 포함할 수 있기 때문에 부분 클래스 정의이다.
	  추상 클래스 역시 형이어서 추상 클래스형의 매개변수를 가지는 코드를 작성할 수 있고, 
	  추상 클래스의 자손인 클래스의 모든 객체에 적용된다.

	  만일 추상 클래스로부터 클래스가 파생됐을 때, 파생 클래스가 모든 상속된 순수 가상 함수에 대해 정의를 정의하지 않으면
	  (또한 새로운 순수 가상 함수를 작성하지 않으면) 그 자체가 추상 클래스이다.
	  만일 모든 상속 순수 가상 함수에 대한 정의가 제공된다면(그리고 역시 새로운 순수 가상 함수를 작성하지 않는다면)
	  결과 클래스는 추상 클래스가 아니고 클래스의 객체를 생성할 수 있다는 것을 의미한다.

	  
*/