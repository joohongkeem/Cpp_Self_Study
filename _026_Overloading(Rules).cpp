
/*
	* 연산자 오버로딩의 규칙

	- 연산자를 오버로딩할 때, 최소한 하나의 인자(피연산자)는 클래스형이여야 한다.

	- 대부분의 연산자는 클래스의 멤버이거나, 클래스의 프렌드이거나 또는 멤버가 아니고 프렌드가 아닌 독립된,
	  세가지 현태 중의 하나로 오버로딩 된다.

	- =, [ ], ->, ( ) 연산자는 클래스의 멤버로서만 오버로딩된다.

	- +, -, *, /, % 등과 같이 존재하는 다양한 연산자의 오버로딩 외에도 새로운 연산자를 생성할 수 있다.

	- 연산자가 가지고 있는 인자의 개수를 변경할 수 없다.
	  예를 들어, %과 같은 이항 연산자를 단항 연산자로 오버로딩할 수 없고,
				  ++과 같은 단항 연산자를 이항 연산자로 오버로딩할 수 없다.

	- 연산자의 우선순위를 변경할 수 없다. 
	  오버로딩된 연산자는 원래 연산자가 가지고 있던 우선순위를 갖는다.
	  예를 들어, x, y, z가 객체이고 연산자 +와 *가 적절한 클래스에 오버로딩되더라도
				  x*y+z 는 항상 (x*y)+z 를 의미한다.

	- 다음의 연산자는 오버로딩 될 수 없다. 도트 연산자(.), 영역 지정 연산자(::), sizeof, '?', ':', ',', '.', '*'

	- 오버로딩된 연산자는 디폴트 인자를 갖지 못한다.

*/